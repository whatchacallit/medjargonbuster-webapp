[{"C:\\Users\\flgeorg\\repositories\\medjargonbuster-webapp\\src\\index.tsx":"1","C:\\Users\\flgeorg\\repositories\\medjargonbuster-webapp\\src\\reportWebVitals.ts":"2","C:\\Users\\flgeorg\\repositories\\medjargonbuster-webapp\\src\\App.tsx":"3","C:\\Users\\flgeorg\\repositories\\medjargonbuster-webapp\\src\\analyze\\Analyze.tsx":"4","C:\\Users\\flgeorg\\repositories\\medjargonbuster-webapp\\src\\analyze\\UploadDocument.tsx":"5","C:\\Users\\flgeorg\\repositories\\medjargonbuster-webapp\\src\\home\\Home.tsx":"6","C:\\Users\\flgeorg\\repositories\\medjargonbuster-webapp\\src\\analyze\\QuestionCard.tsx":"7","C:\\Users\\flgeorg\\repositories\\medjargonbuster-webapp\\src\\analyze\\UploadCard.tsx":"8","C:\\Users\\flgeorg\\repositories\\medjargonbuster-webapp\\src\\analyze\\UrlCard.tsx":"9","C:\\Users\\flgeorg\\repositories\\medjargonbuster-webapp\\src\\analyze\\Contexts.tsx":"10","C:\\Users\\flgeorg\\repositories\\medjargonbuster-webapp\\src\\analyze\\ResultPage.tsx":"11","C:\\Users\\flgeorg\\repositories\\medjargonbuster-webapp\\src\\analyze\\ReadableContent.tsx":"12","C:\\Users\\flgeorg\\repositories\\medjargonbuster-webapp\\src\\analyze\\StartPage.tsx":"13","C:\\Users\\flgeorg\\repositories\\medjargonbuster-webapp\\src\\analyze\\AnalyzingSpinnerPage.tsx":"14"},{"size":570,"mtime":1611163253160,"results":"15","hashOfConfig":"16"},{"size":425,"mtime":499162500000,"results":"17","hashOfConfig":"16"},{"size":1955,"mtime":1611276726881,"results":"18","hashOfConfig":"16"},{"size":7494,"mtime":1611282907957,"results":"19","hashOfConfig":"16"},{"size":214,"mtime":1610295791981,"results":"20","hashOfConfig":"16"},{"size":402,"mtime":1611076867318,"results":"21","hashOfConfig":"16"},{"size":825,"mtime":1610305167933,"results":"22","hashOfConfig":"16"},{"size":2364,"mtime":1611247147168,"results":"23","hashOfConfig":"16"},{"size":1950,"mtime":1611261563075,"results":"24","hashOfConfig":"16"},{"size":1513,"mtime":1611157708807,"results":"25","hashOfConfig":"16"},{"size":7099,"mtime":1611282598410,"results":"26","hashOfConfig":"16"},{"size":5183,"mtime":1611273922428,"results":"27","hashOfConfig":"16"},{"size":890,"mtime":1611248253823,"results":"28","hashOfConfig":"16"},{"size":665,"mtime":1611257864840,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"1w3l57a",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":37,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":14,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"46"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49","usedDeprecatedRules":"32"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"32"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"55","messages":"56","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"32"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"32"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"32"},"C:\\Users\\flgeorg\\repositories\\medjargonbuster-webapp\\src\\index.tsx",[],["66","67"],"C:\\Users\\flgeorg\\repositories\\medjargonbuster-webapp\\src\\reportWebVitals.ts",[],"C:\\Users\\flgeorg\\repositories\\medjargonbuster-webapp\\src\\App.tsx",["68","69","70","71","72","73","74","75","76","77","78","79","80","81","82","83","84","85","86","87","88","89","90","91","92","93","94","95","96","97","98","99","100","101","102","103","104"],"C:\\Users\\flgeorg\\repositories\\medjargonbuster-webapp\\src\\analyze\\Analyze.tsx",["105","106","107","108","109","110","111","112","113","114","115","116","117","118"],"C:\\Users\\flgeorg\\repositories\\medjargonbuster-webapp\\src\\analyze\\UploadDocument.tsx",[],"C:\\Users\\flgeorg\\repositories\\medjargonbuster-webapp\\src\\home\\Home.tsx",[],"C:\\Users\\flgeorg\\repositories\\medjargonbuster-webapp\\src\\analyze\\QuestionCard.tsx",["119"],"import { FC } from 'react';\r\nimport '../App.less';\r\n\r\nimport { Card, Input } from 'antd';\r\nimport Paragraph from 'antd/lib/typography/Paragraph';\r\nimport Search from 'antd/lib/input/Search';\r\n\r\n\r\nimport { AudioOutlined } from '@ant-design/icons';\r\n\r\nconst cardStyle = {\r\n    height: '100%'\r\n};\r\n\r\nconst QuestionCard: FC = () => (\r\n    <>\r\n        <Card hoverable={true} style={cardStyle}>\r\n            <Paragraph>\r\n                I have some other questions about the MedJargonBuster program.\r\n                </Paragraph>\r\n            <Search\r\n                placeholder=\"(Please type or speak your question...)\"\r\n                enterButton=\"Ask\"\r\n                size=\"large\"\r\n                suffix={<AudioOutlined style={{ fontSize: 16 }} />}\r\n            />\r\n        </Card>\r\n    </>\r\n)\r\n\r\nexport default QuestionCard",["120","121"],"C:\\Users\\flgeorg\\repositories\\medjargonbuster-webapp\\src\\analyze\\UploadCard.tsx",["122","123"],"import { FC, useState } from 'react';\r\nimport '../App.less';\r\n\r\nimport { Card, Upload, message } from 'antd';\r\nimport { UploadChangeParam, UploadProps } from 'antd/lib/upload';\r\n\r\nimport Paragraph from 'antd/lib/typography/Paragraph';\r\nimport { UploadOutlined } from '@ant-design/icons';\r\n\r\nimport { useAnalysisContext } from './Contexts';\r\n\r\n\r\nconst { Dragger } = Upload;\r\n\r\n\r\nconst EXTRACT_UPLOAD_ENDPOINT_URL = \"http://localhost:5000/extract/upload\"\r\n\r\n\r\n\r\nconst cardStyle = {\r\n    height: '100%'\r\n\r\n};\r\n\r\n\r\nconst UploadCard: FC = () => {\r\n\r\n    const ctx = useAnalysisContext()\r\n\r\n\r\n    const onUploadProgress = (info: UploadChangeParam) => {\r\n        const { status } = info.file;\r\n\r\n        if (status !== 'uploading') {\r\n            ctx.setExtracting(true)\r\n\r\n\r\n            //console.log(\"Uploading\", info.file, info.fileList);\r\n        }\r\n        if (status === 'done') {\r\n            ctx.setExtracting(false)\r\n            ctx.setExtractionResult({\r\n                text: info.file.response.text,\r\n                meta: info.file.response.meta\r\n            })\r\n\r\n            //message.success(`${info.file.name} file uploaded successfully.`);\r\n\r\n\r\n\r\n        } else if (status === 'error') {\r\n            ctx.setExtracting(false)\r\n            ctx.setHasError(true)\r\n\r\n            message.error(`${info.file.name} file upload failed.`);\r\n        }\r\n    }\r\n\r\n\r\n\r\n    /**\r\n     * see https://ant.design/components/upload/#API\r\n     */\r\n    const uploadProps = {\r\n        name: 'file',\r\n        multiple: false,\r\n        maxCount: 1,\r\n        action: EXTRACT_UPLOAD_ENDPOINT_URL,\r\n        onChange: onUploadProgress\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <Card hoverable={true} style={cardStyle}>\r\n                <Paragraph>\r\n                    Upload a scan or photo of a medical report or other text.\r\n                 </Paragraph>\r\n\r\n                <Dragger {...uploadProps}>\r\n                    <p className=\"ant-upload-drag-icon\">\r\n                        <UploadOutlined />\r\n                    </p>\r\n                    <p className=\"ant-upload-text\">Click or drag a file to this area to upload</p>\r\n                    <p className=\"ant-upload-hint\">\r\n                        max. 1 MB. e.g. pdf, jpeg, png, doc/docx, ppt, ...</p>\r\n\r\n\r\n                </Dragger>\r\n\r\n            </Card>\r\n\r\n        </>\r\n    )\r\n}\r\n\r\nexport default UploadCard","C:\\Users\\flgeorg\\repositories\\medjargonbuster-webapp\\src\\analyze\\UrlCard.tsx",["124"],"import '../App.less';\r\n\r\nimport { Card, message } from 'antd';\r\nimport Paragraph from 'antd/lib/typography/Paragraph';\r\nimport Search from 'antd/lib/input/Search';\r\nimport { useAnalysisContext } from './Contexts';\r\nimport AnchorLink from 'antd/lib/anchor/AnchorLink';\r\n\r\nconst cardStyle = {\r\n    height: '100%'\r\n};\r\n\r\n\r\nconst EXTRACT_URL_ENDPOINT_URL = \"http://localhost:5000/extract\"\r\n\r\n\r\n\r\nfunction UrlCard() {\r\n\r\n    const ctx = useAnalysisContext()\r\n\r\n\r\n    const extractFromUrl = (value: string) => {\r\n        ctx.setExtracting(true);\r\n\r\n\r\n        const options = {\r\n            method: \"GET\",\r\n            headers: {\r\n                \"accept\": \"application/json\"\r\n            }\r\n        }\r\n\r\n        fetch(EXTRACT_URL_ENDPOINT_URL + \"?url=\" + value, options)\r\n            .then(response => response.json())\r\n            .then(json => {\r\n                ctx.setExtracting(false);\r\n\r\n                message.success(`Url loaded successfully`);\r\n\r\n                ctx.setExtractionResult({\r\n                    meta: json['meta'],\r\n                    text: json['text']\r\n                })\r\n                console.log(json)\r\n            })\r\n\r\n\r\n    }\r\n\r\n\r\n\r\n\r\n    return (<>\r\n        <Card hoverable={true} style={cardStyle}>\r\n            <Paragraph>\r\n                Analyze some public health information from the internet.\r\n                For example, a news article,blog, research document\r\n                </Paragraph>\r\n            <Search\r\n                loading={ctx.isExtracting}\r\n                placeholder=\"URL\"\r\n                enterButton=\"Analyze\"\r\n                onSearch={extractFromUrl}\r\n                size=\"large\"\r\n            />\r\n            e.g.\r\n            <Paragraph type=\"secondary\" copyable={true} >https://www.newswise.com/articles/breast-cancer-screening-by-age-40-or-younger-for-black-women-advise-beaumont-researchers?sc=sphr&xy=10021790</Paragraph>\r\n        </Card>\r\n    </>\r\n    )\r\n}\r\n\r\nexport default UrlCard","C:\\Users\\flgeorg\\repositories\\medjargonbuster-webapp\\src\\analyze\\Contexts.tsx",[],"C:\\Users\\flgeorg\\repositories\\medjargonbuster-webapp\\src\\analyze\\ResultPage.tsx",["125","126","127","128","129","130"],"C:\\Users\\flgeorg\\repositories\\medjargonbuster-webapp\\src\\analyze\\ReadableContent.tsx",["131","132","133"],"import { CSSProperties } from 'react';\r\n\r\nimport { Card, Input, Button, Typography, Switch } from 'antd';\r\n\r\nimport { useAnalysisContext } from './Contexts';\r\nimport '../App.less';\r\n\r\nimport { TranslationOutlined } from '@ant-design/icons';\r\n\r\n// ES module\r\n//import Editor from 'react-medium-editor';\r\n\r\nimport ReactMarkdown from 'react-markdown'\r\n//import { render } from 'react-dom'\r\nimport gfm from 'remark-gfm'\r\n\r\n\r\n\r\n//const { Paragraph } = Typography;\r\n//const { Search, TextArea } = Input;\r\n\r\n\r\n\r\nconst IR_TOKEN_URL = \"http://localhost:5000/getIRToken\"\r\n\r\n\r\n/**\r\n * \r\n * @param props.paragraphs: [str]\r\n * @param props.title : str\r\n * \r\n */\r\nfunction ReadableContent(props: any) {\r\n    const ctx = useAnalysisContext()\r\n\r\n    const immersiveReaderButtonStyle: CSSProperties = {\r\n        //float: \"right\",\r\n        marginRight: 20\r\n    }\r\n    const cardStyle: CSSProperties = {\r\n        height: \"100%\"\r\n    }\r\n\r\n    var translateToLanguage = ctx.options.autoTranslateLanguage\r\n    var originalLanguage = ctx.analysisResult.meta['language'] || \"en-US\"\r\n\r\n    var contentParagraphs = props.paragraphs || [\"Unfortunatly, this text is unavailable\"]\r\n\r\n    // FIXME maybe use multiple \"chunks\" ?\r\n    var markdownSource = \"* \" + contentParagraphs.join(\"\\n* \")\r\n    var chunks = [{\r\n        content: contentParagraphs.join(\"\\n\\n\"),\r\n        mimeType: \"text/html\"\r\n    }]\r\n    //console.log(\"chunks\", chunks);\r\n\r\n    /** Data sent to the Immersive reader */\r\n    // MIME types https://docs.microsoft.com/azure/cognitive-services/immersive-reader/reference#chunk\r\n    const data = {\r\n        title: props.title || \"Summary\",\r\n        chunks: chunks\r\n    };\r\n    /** Options sent to the Immersive reader */\r\n    // https://docs.microsoft.com/azure/cognitive-services/immersive-reader/reference#options\r\n    const irOptions = {\r\n        \"onExit\": exitCallback,\r\n        \"uiZIndex\": 2000,\r\n        \"uiLang\": translateToLanguage || \"en-US\",\r\n        \"readAloudOptions\": {\r\n            voice: \"Female\",\r\n            speed: 1.0,\r\n            autoPlay: true,\r\n\r\n        },\r\n        \"translationOptions\": {\r\n            language: translateToLanguage || \"en-US\",\r\n            autoEnableDocumentTranslation: ctx.options.autoTranslate\r\n        },\r\n        \"displayOptions\": {\r\n            textSize: 20\r\n        }\r\n    };\r\n\r\n\r\n\r\n    /**\r\n     * Request token / subdomain for Immersive Reader\r\n     */\r\n    function getTokenAndSubdomainAsync() {\r\n        const options = {\r\n            method: \"GET\",\r\n            headers: {\r\n                \"accept\": \"application/json\"\r\n            }\r\n        }\r\n        return new Promise((resolve, reject) => {\r\n            fetch(IR_TOKEN_URL, options)\r\n                .then(response => response.json())\r\n                .then(json => {\r\n                    console.log(\"IR token\", json)\r\n                    resolve(json)\r\n\r\n                })\r\n                .catch(e => {\r\n                    console.log(e)\r\n                    reject(e)\r\n                })\r\n\r\n        });\r\n    }\r\n\r\n    /**\r\n     * This launches the Immersive Reader in an iframe (\"fullscreen\" overlay).\r\n     * 'ImmersiveReader' is a global (window.xxx) object loaded in index.hhtml.  \r\n     */\r\n    function launchReader() {\r\n        getTokenAndSubdomainAsync()\r\n            .then(function (response: any) {\r\n                const token = response[\"token\"];\r\n                const subdomain = response[\"subdomain\"];\r\n\r\n                // FIXME clean way to get object from, this just grabs from global scope (script loaded inside index.html)\r\n                const ImmersiveReader: any = Object(window)['ImmersiveReader']\r\n\r\n                ImmersiveReader.launchAsync(token, subdomain, data, irOptions)\r\n                    .catch(function (error: any) {\r\n                        alert(\"We're sorry, something went wrong starting the Immersive Reader.\");\r\n                        console.log(error);\r\n                    });\r\n\r\n            })\r\n            .catch(function (error) {\r\n                alert(\"An error occured while requesting the Immersive Reader credentials from our API.\");\r\n                console.log(error);\r\n            });\r\n    }\r\n\r\n    function exitCallback() {\r\n        console.log(\"Immersive reader closed\");\r\n        /**\r\n         * TODO cleanup\r\n         */\r\n    }\r\n\r\n    const toggleAutotranslate = () => {\r\n        ctx.setOptions(Object.assign({}, ctx.options, { autoTranslate: !ctx.options.autoTranslate }))\r\n\r\n    }\r\n\r\n    let btnOpenIR = (<Button key={1} size=\"small\" onClick={launchReader} style={immersiveReaderButtonStyle}>\r\n        Immersive Reader <TranslationOutlined />\r\n    </Button>)\r\n\r\n    let switchAutoTranslate = (<Switch size=\"small\" title=\"Translate\"\r\n        onClick={toggleAutotranslate}\r\n        checked={ctx.options.autoTranslate}\r\n        unCheckedChildren={originalLanguage.substr(0, 2)}\r\n        checkedChildren={String(translateToLanguage).substr(0, 2)} />)\r\n\r\n    return (\r\n        <>\r\n            <Card title={props.title} extra={[btnOpenIR, switchAutoTranslate]}>\r\n\r\n                <ReactMarkdown plugins={[gfm]} children={markdownSource} />\r\n\r\n\r\n            </Card>\r\n        </>\r\n    )\r\n}\r\nexport default ReadableContent;\r\n\r\n","C:\\Users\\flgeorg\\repositories\\medjargonbuster-webapp\\src\\analyze\\StartPage.tsx",["134","135","136"],"import React, { FC } from 'react';\r\nimport '../App.less';\r\n\r\nimport { Row, Col, PageHeader, } from 'antd';\r\n\r\n\r\nimport UploadCard from './UploadCard';\r\nimport UrlCard from './UrlCard';\r\n\r\nimport { useAnalysisContext } from './Contexts'\r\n\r\n\r\nconst avatarGreeting = \"Welcome\"\r\nconst avatarMessage = \"Please show the the document you want to understand better\"\r\n\r\n\r\nconst StartPage: FC = () => {\r\n    const ctx = useAnalysisContext()\r\n\r\n    console.log(\"StartPage context\", ctx)\r\n\r\n    return (\r\n        <>\r\n\r\n            <Row gutter={[24, 16]} style={{ height: '100%' }}>\r\n                <Col xs={24} sm={24} md={24} lg={12} xl={12}>\r\n                    <UploadCard />\r\n                </Col>\r\n                <Col xs={24} sm={24} md={24} lg={12} xl={12}>\r\n                    <UrlCard />\r\n                </Col>\r\n\r\n            </Row>\r\n        </>\r\n\r\n    )\r\n}\r\n\r\n\r\nexport default StartPage;","C:\\Users\\flgeorg\\repositories\\medjargonbuster-webapp\\src\\analyze\\AnalyzingSpinnerPage.tsx",["137","138","139","140"],"import React, { FC } from 'react';\r\nimport '../App.less';\r\n\r\nimport { Row, Col, PageHeader, Spin, message } from 'antd';\r\n\r\n\r\n\r\n\r\nconst avatarGreeting = \"Ok, let's see...\"\r\nconst avatarMessage = \"I'm reading your text, please wait...\"\r\n\r\n\r\nconst AnalyzingSpinnerPage: FC = () => {\r\n    return (\r\n        <>\r\n\r\n            <Row gutter={[24, 16]} style={{ height: '100%' }}>\r\n                <Col style={{ 'textAlign': 'center', paddingTop: 100 }} xs={24} sm={24} md={24} lg={24} xl={24}>\r\n                    <Spin size=\"large\" style={{ margin: 'auto' }} />\r\n                </Col>\r\n            </Row>\r\n        </>\r\n\r\n    )\r\n}\r\n\r\nexport default AnalyzingSpinnerPage;",{"ruleId":"141","replacedBy":"142"},{"ruleId":"143","replacedBy":"144"},{"ruleId":"145","severity":1,"message":"146","line":1,"column":21,"nodeType":"147","messageId":"148","endLine":1,"endColumn":29},{"ruleId":"145","severity":1,"message":"149","line":4,"column":18,"nodeType":"147","messageId":"148","endLine":4,"endColumn":22},{"ruleId":"145","severity":1,"message":"150","line":4,"column":24,"nodeType":"147","messageId":"148","endLine":4,"endColumn":29},{"ruleId":"145","severity":1,"message":"151","line":4,"column":31,"nodeType":"147","messageId":"148","endLine":4,"endColumn":37},{"ruleId":"145","severity":1,"message":"152","line":4,"column":39,"nodeType":"147","messageId":"148","endLine":4,"endColumn":44},{"ruleId":"145","severity":1,"message":"153","line":4,"column":46,"nodeType":"147","messageId":"148","endLine":4,"endColumn":51},{"ruleId":"145","severity":1,"message":"154","line":9,"column":3,"nodeType":"147","messageId":"148","endLine":9,"endColumn":17},{"ruleId":"145","severity":1,"message":"155","line":9,"column":19,"nodeType":"147","messageId":"148","endLine":9,"endColumn":31},{"ruleId":"145","severity":1,"message":"156","line":10,"column":3,"nodeType":"147","messageId":"148","endLine":10,"endColumn":22},{"ruleId":"145","severity":1,"message":"157","line":10,"column":24,"nodeType":"147","messageId":"148","endLine":10,"endColumn":35},{"ruleId":"145","severity":1,"message":"158","line":11,"column":3,"nodeType":"147","messageId":"148","endLine":11,"endColumn":15},{"ruleId":"145","severity":1,"message":"159","line":11,"column":17,"nodeType":"147","messageId":"148","endLine":11,"endColumn":35},{"ruleId":"145","severity":1,"message":"160","line":12,"column":3,"nodeType":"147","messageId":"148","endLine":12,"endColumn":17},{"ruleId":"145","severity":1,"message":"161","line":13,"column":3,"nodeType":"147","messageId":"148","endLine":13,"endColumn":15},{"ruleId":"145","severity":1,"message":"162","line":14,"column":3,"nodeType":"147","messageId":"148","endLine":14,"endColumn":18},{"ruleId":"145","severity":1,"message":"163","line":15,"column":3,"nodeType":"147","messageId":"148","endLine":15,"endColumn":21},{"ruleId":"145","severity":1,"message":"164","line":16,"column":3,"nodeType":"147","messageId":"148","endLine":16,"endColumn":18},{"ruleId":"145","severity":1,"message":"165","line":17,"column":3,"nodeType":"147","messageId":"148","endLine":17,"endColumn":19},{"ruleId":"145","severity":1,"message":"166","line":18,"column":3,"nodeType":"147","messageId":"148","endLine":18,"endColumn":18},{"ruleId":"145","severity":1,"message":"167","line":19,"column":3,"nodeType":"147","messageId":"148","endLine":19,"endColumn":22},{"ruleId":"145","severity":1,"message":"168","line":20,"column":3,"nodeType":"147","messageId":"148","endLine":20,"endColumn":15},{"ruleId":"145","severity":1,"message":"169","line":21,"column":3,"nodeType":"147","messageId":"148","endLine":21,"endColumn":17},{"ruleId":"145","severity":1,"message":"170","line":22,"column":3,"nodeType":"147","messageId":"148","endLine":22,"endColumn":18},{"ruleId":"145","severity":1,"message":"171","line":23,"column":3,"nodeType":"147","messageId":"148","endLine":23,"endColumn":18},{"ruleId":"145","severity":1,"message":"172","line":24,"column":3,"nodeType":"147","messageId":"148","endLine":24,"endColumn":20},{"ruleId":"145","severity":1,"message":"173","line":25,"column":3,"nodeType":"147","messageId":"148","endLine":25,"endColumn":20},{"ruleId":"145","severity":1,"message":"174","line":26,"column":3,"nodeType":"147","messageId":"148","endLine":26,"endColumn":20},{"ruleId":"145","severity":1,"message":"175","line":27,"column":3,"nodeType":"147","messageId":"148","endLine":27,"endColumn":16},{"ruleId":"145","severity":1,"message":"176","line":28,"column":3,"nodeType":"147","messageId":"148","endLine":28,"endColumn":18},{"ruleId":"145","severity":1,"message":"177","line":29,"column":3,"nodeType":"147","messageId":"148","endLine":29,"endColumn":16},{"ruleId":"145","severity":1,"message":"178","line":30,"column":3,"nodeType":"147","messageId":"148","endLine":30,"endColumn":15},{"ruleId":"145","severity":1,"message":"179","line":31,"column":3,"nodeType":"147","messageId":"148","endLine":31,"endColumn":13},{"ruleId":"145","severity":1,"message":"180","line":32,"column":3,"nodeType":"147","messageId":"148","endLine":32,"endColumn":15},{"ruleId":"145","severity":1,"message":"181","line":33,"column":3,"nodeType":"147","messageId":"148","endLine":33,"endColumn":22},{"ruleId":"145","severity":1,"message":"182","line":40,"column":8,"nodeType":"147","messageId":"148","endLine":40,"endColumn":13},{"ruleId":"145","severity":1,"message":"183","line":46,"column":3,"nodeType":"147","messageId":"148","endLine":46,"endColumn":7},{"ruleId":"145","severity":1,"message":"184","line":50,"column":34,"nodeType":"147","messageId":"148","endLine":50,"endColumn":39},{"ruleId":"145","severity":1,"message":"185","line":8,"column":5,"nodeType":"147","messageId":"148","endLine":8,"endColumn":21},{"ruleId":"145","severity":1,"message":"186","line":9,"column":5,"nodeType":"147","messageId":"148","endLine":9,"endColumn":17},{"ruleId":"145","severity":1,"message":"187","line":10,"column":5,"nodeType":"147","messageId":"148","endLine":10,"endColumn":19},{"ruleId":"145","severity":1,"message":"188","line":12,"column":5,"nodeType":"147","messageId":"148","endLine":12,"endColumn":26},{"ruleId":"145","severity":1,"message":"189","line":17,"column":8,"nodeType":"147","messageId":"148","endLine":17,"endColumn":17},{"ruleId":"145","severity":1,"message":"190","line":20,"column":27,"nodeType":"147","messageId":"148","endLine":20,"endColumn":33},{"ruleId":"145","severity":1,"message":"191","line":20,"column":35,"nodeType":"147","messageId":"148","endLine":20,"endColumn":40},{"ruleId":"145","severity":1,"message":"192","line":20,"column":42,"nodeType":"147","messageId":"148","endLine":20,"endColumn":48},{"ruleId":"145","severity":1,"message":"193","line":20,"column":50,"nodeType":"147","messageId":"148","endLine":20,"endColumn":60},{"ruleId":"145","severity":1,"message":"194","line":37,"column":7,"nodeType":"147","messageId":"148","endLine":37,"endColumn":13},{"ruleId":"145","severity":1,"message":"195","line":46,"column":7,"nodeType":"147","messageId":"148","endLine":46,"endColumn":32},{"ruleId":"196","severity":1,"message":"197","line":79,"column":8,"nodeType":"198","endLine":79,"endColumn":18,"suggestions":"199"},{"ruleId":"196","severity":1,"message":"200","line":98,"column":8,"nodeType":"198","endLine":98,"endColumn":42,"suggestions":"201"},{"ruleId":"202","severity":1,"message":"203","line":192,"column":18,"nodeType":"204","messageId":"205","endLine":192,"endColumn":20},{"ruleId":"145","severity":1,"message":"206","line":4,"column":16,"nodeType":"147","messageId":"148","endLine":4,"endColumn":21},{"ruleId":"141","replacedBy":"207"},{"ruleId":"143","replacedBy":"208"},{"ruleId":"145","severity":1,"message":"146","line":1,"column":14,"nodeType":"147","messageId":"148","endLine":1,"endColumn":22},{"ruleId":"145","severity":1,"message":"209","line":5,"column":29,"nodeType":"147","messageId":"148","endLine":5,"endColumn":40},{"ruleId":"145","severity":1,"message":"210","line":7,"column":8,"nodeType":"147","messageId":"148","endLine":7,"endColumn":18},{"ruleId":"145","severity":1,"message":"211","line":21,"column":7,"nodeType":"147","messageId":"148","endLine":21,"endColumn":19},{"ruleId":"145","severity":1,"message":"212","line":32,"column":9,"nodeType":"147","messageId":"148","endLine":32,"endColumn":20},{"ruleId":"145","severity":1,"message":"213","line":36,"column":9,"nodeType":"147","messageId":"148","endLine":36,"endColumn":27},{"ruleId":"202","severity":1,"message":"203","line":67,"column":22,"nodeType":"204","messageId":"205","endLine":67,"endColumn":24},{"ruleId":"202","severity":1,"message":"203","line":70,"column":22,"nodeType":"204","messageId":"205","endLine":70,"endColumn":24},{"ruleId":"202","severity":1,"message":"203","line":73,"column":22,"nodeType":"204","messageId":"205","endLine":73,"endColumn":24},{"ruleId":"145","severity":1,"message":"206","line":3,"column":16,"nodeType":"147","messageId":"148","endLine":3,"endColumn":21},{"ruleId":"145","severity":1,"message":"214","line":3,"column":31,"nodeType":"147","messageId":"148","endLine":3,"endColumn":41},{"ruleId":"145","severity":1,"message":"215","line":40,"column":11,"nodeType":"147","messageId":"148","endLine":40,"endColumn":35},{"ruleId":"145","severity":1,"message":"216","line":4,"column":20,"nodeType":"147","messageId":"148","endLine":4,"endColumn":30},{"ruleId":"145","severity":1,"message":"217","line":13,"column":7,"nodeType":"147","messageId":"148","endLine":13,"endColumn":21},{"ruleId":"145","severity":1,"message":"218","line":14,"column":7,"nodeType":"147","messageId":"148","endLine":14,"endColumn":20},{"ruleId":"145","severity":1,"message":"216","line":4,"column":20,"nodeType":"147","messageId":"148","endLine":4,"endColumn":30},{"ruleId":"145","severity":1,"message":"219","line":4,"column":38,"nodeType":"147","messageId":"148","endLine":4,"endColumn":45},{"ruleId":"145","severity":1,"message":"217","line":9,"column":7,"nodeType":"147","messageId":"148","endLine":9,"endColumn":21},{"ruleId":"145","severity":1,"message":"218","line":10,"column":7,"nodeType":"147","messageId":"148","endLine":10,"endColumn":20},"no-native-reassign",["220"],"no-negated-in-lhs",["221"],"@typescript-eslint/no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'Menu' is defined but never used.","'Image' is defined but never used.","'Avatar' is defined but never used.","'Space' is defined but never used.","'Steps' is defined but never used.","'UploadOutlined' is defined but never used.","'UserOutlined' is defined but never used.","'VideoCameraOutlined' is defined but never used.","'AudioFilled' is defined but never used.","'LinkOutlined' is defined but never used.","'MedicineBoxTwoTone' is defined but never used.","'CameraOutlined' is defined but never used.","'BulbOutlined' is defined but never used.","'ControlOutlined' is defined but never used.","'ExperimentOutlined' is defined but never used.","'FilePdfOutlined' is defined but never used.","'FileWordOutlined' is defined but never used.","'FilePptOutlined' is defined but never used.","'FileUnknownOutlined' is defined but never used.","'HomeOutlined' is defined but never used.","'IdcardOutlined' is defined but never used.","'MessageOutlined' is defined but never used.","'LoadingOutlined' is defined but never used.","'NodeIndexOutlined' is defined but never used.","'PartitionOutlined' is defined but never used.","'PaperClipOutlined' is defined but never used.","'RobotOutlined' is defined but never used.","'SettingOutlined' is defined but never used.","'SoundOutlined' is defined but never used.","'StarOutlined' is defined but never used.","'StarFilled' is defined but never used.","'TagsOutlined' is defined but never used.","'TranslationOutlined' is defined but never used.","'Title' is defined but never used.","'Link' is defined but never used.","'Sider' is assigned a value but never used.","'HourglassTwoTone' is defined but never used.","'HeartTwoTone' is defined but never used.","'SettingTwoTone' is defined but never used.","'QuestionCircleTwoTone' is defined but never used.","'Paragraph' is defined but never used.","'Router' is defined but never used.","'Route' is defined but never used.","'Switch' is defined but never used.","'useHistory' is defined but never used.","'ROUTES' is assigned a value but never used.","'EXTRACT_TEXT_ENDPOINT_URL' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'currentStep'. Either include it or remove the dependency array.","ArrayExpression",["222"],"React Hook useEffect has a missing dependency: 'hasError'. Either include it or remove the dependency array.",["223"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Input' is defined but never used.",["220"],["221"],"'UploadProps' is defined but never used.","'AnchorLink' is defined but never used.","'IR_TOKEN_URL' is assigned a value but never used.","'summaryHTML' is assigned a value but never used.","'doc_classification' is assigned a value but never used.","'Typography' is defined but never used.","'cardStyle' is assigned a value but never used.","'PageHeader' is defined but never used.","'avatarGreeting' is assigned a value but never used.","'avatarMessage' is assigned a value but never used.","'message' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"224","fix":"225"},{"desc":"226","fix":"227"},"Update the dependencies array to be: [currentStep, location]",{"range":"228","text":"229"},"Update the dependencies array to be: [extractionResult, analysisResult, hasError]",{"range":"230","text":"231"},[2273,2283],"[currentStep, location]",[2864,2898],"[extractionResult, analysisResult, hasError]"]